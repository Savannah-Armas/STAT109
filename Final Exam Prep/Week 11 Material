------------------------------------------------------------------------------------------
          LECTURE
------------------------------------------------------------------------------------------
#Week-11
# Video: https://youtu.be/6SMrjEwFiQY
library(DAAG)
library(party)
library(rpart)
library(rpart.plot)
library(mlbench)
library(pROC)
library(tree)
library(caret)

# 1. Classification Tree 
str(spam7)  
mydata <- spam7

# Split data
set.seed(1234)
ind <- sample(2, nrow(mydata), replace = T, prob = c(0.5, 0.5))
train <- mydata[ind == 1,]
test <- mydata[ind == 2,]

# Tree
tree <- rpart(yesno ~., data = train)
tree <- rpart(yesno ~., data = train, cp = 0.001)
# Bigger tree <- overfitting, we do not want that 
rpart.plot(tree)
printcp(tree)
plotcp(tree)

# Confusion matrix -train
p <- predict(tree, train, type = 'class')
head(p)
confusionMatrix(p, train$yesno)
# In Console: > table(train$yesno)
# In Console: > 1405/2305 = 60.9% baseline we need to beat
# No Information Rate : 0.6095 

# ROC
p1 <- predict(tree, test, type = 'prob')
p1 <- p1[,2]
r <- multiclass.roc(test$yesno, p1, percent = TRUE)
roc <- r[['rocs']]
r1 <- roc[[1]]
plot.roc(r1,
         print.auc=TRUE, 
         auc.polygon=TRUE, 
         grid=c(0.1, 0.2),
         grid.col=c("green", "red"), 
         max.auc.polygon=TRUE,
         auc.polygon.col="lightblue", 
         print.thres=TRUE, 
         main= 'ROC Curve')

# 2. Regression Tree 
data('BostonHousing')
mydata <- BostonHousing

# Split data
set.seed(1234)
ind <- sample(2, nrow(mydata), replace = T, prob = c(0.5, 0.5))
train <- mydata[ind == 1,]
test <- mydata[ind == 2,]

# regression tree
tree <- rpart(medv ~., data = train)
rpart.plot(tree)
printcp(tree)
plotcp(tree)

# Predict 
p <- predict(tree, train)
plot(p ~ train$medv)
sqrt(mean((train$medv - p)^2))
